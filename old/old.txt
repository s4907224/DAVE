    '''
    def genConvexHull(self):
        def antiClockwise(p1, p2, p3):
            det = (p2[0] - p1[0]) * (p3[2] - p1[2]) - (p2[2] - p1[2]) * (p3[0] - p1[0])
            return det

        def polarAngle(a, b):
            x = a[0] - b[0]
            y = a[2] - b[2]
            if (x > 0 and y > 0):
                return math.atan(y / x)
            elif (x < 0 and y > 0):
                return math.atan(-x / y) + math.pi / 2.0
            elif (x < 0 and y < 0):
                return math.atan(y / x) + math.pi
            elif (x > 0 and y < 0):
                return math.atan(-x / y) + math.pi / 2.0 + math.pi
            elif (x == 0 and y > 0):
                return math.pi / 2.0
            elif (x < 0 and y == 0):
                return math.pi
            elif (x == 0 and y < 0):
                return math.pi / 2.0 + math.pi
            else:
                return 0

        sortedVerts = []
        for i in range(len(self.topVerts)):
            sortedVerts.append(i)
        test = [x for y, x in sorted(zip(self.topVerts, sortedVerts), key = lambda var: var[0][2])]
        angleSortedVerts = sorted(test, key = lambda var: polarAngle(self.topVerts[var], self.topVerts[test[0]]))
        stack = []
        stack.append(angleSortedVerts[0])
        stack.append(angleSortedVerts[1])
        cmds.select(d = True)
        for i in range (2, len(sortedVerts)):
            while len(stack) >= 2 and antiClockwise(self.topVerts[stack[len(stack) - 2]], self.topVerts[stack[len(stack) - 1]], self.topVerts[angleSortedVerts[i]]) <= 0:
                cmds.select(self.transform + ".vtx["+str(self.topVertsIndex[stack[len(stack) - 1]])+"]", add = True)
                cmds.refresh()
                time.sleep(0.05)
                stack.pop()
            stack.append(angleSortedVerts[i])
        self.convexhull = []
        cmds.select(d = True)
        for i in range(len(stack)):
            self.convexhull.append(stack[i])
            cmds.select(self.transform + ".vtx["+str(self.topVertsIndex[self.convexhull[i]])+"]", add = True)
    '''